{"version":3,"sources":["Data/HSPTG1LowRes.jpg","Data/HSPTGLowRes.jpg","Pages/About.jsx","Components/AppNavBar.jsx","Pages/Projects.jsx","Pages/MainPage.jsx","Pages/Contact.jsx","App.js","serviceWorker.js","index.js","Data/MyFace1.png"],"names":["module","exports","ImageWrapper","styled","img","TextWrapper","div","About","Container","Row","lg","Col","src","require","alt","NavBarWrap","NavLinkText","span","props","isActive","AppNavBar","isActiveRoute","activeRoute","route","Navbar","expand","className","Brand","href","Toggle","aria-controls","Collapse","id","Nav","Link","NavDropdown","title","Item","a","Projects","ImgWrapper","SmallScreenTextWrapper","FancyText","HEADLINETEXT","React","useState","index","setIndex","useEffect","intervalId","setInterval","clearInterval","text","length","spring","presets","gentle","overflow","inline","console","log","MainPage","location","useLocation","windowSize","isClient","window","getSize","width","innerWidth","undefined","height","innerHeight","setWindowSize","handleResize","addEventListener","removeEventListener","ScreenHeight","pathname","Contain","H1Wrap","h1","Input","input","attrs","size","TextAreaWrapper","textarea","Telegram","setToken","setRecipient","Contact","useForm","register","handleSubmit","onSubmit","data","message","Name","Email","Message","axios","post","name","email","ref","placeholder","type","rows","App","path","render","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"2FAAAA,EAAOC,QAAU,IAA0B,0C,oBCA3CD,EAAOC,QAAU,IAA0B,yC,uaCK3C,IAAMC,EAAeC,IAAOC,IAAV,KAMZC,EAAcF,IAAOG,IAAV,KA4BFC,EArBD,WACZ,OACE,6BACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAI,GACT,kBAACC,EAAA,EAAD,CAAKD,GAAI,GACP,kBAACR,EAAD,CAAcU,IAAKC,EAAQ,IAAwBC,IAAI,UAEzD,kBAACH,EAAA,EAAD,KACE,kBAACN,EAAD,KACE,wCADF,wJ,gTCvBV,IAAMU,EAAaZ,IAAOG,IAAV,KAOVU,EAAcb,IAAOc,KAAV,KACN,SAAAC,GAAK,OAAIA,EAAMC,UAAY,SA6CvBC,EAnCG,SAACF,GAAU,IAGrBG,EAPS,SAACC,GAAD,OAAiB,SAACC,GAAD,OAChCD,IAAgBC,GAMMJ,CADED,EAAhBI,aAGR,OACE,kBAACP,EAAD,KACE,kBAACS,EAAA,EAAD,CAAQC,OAAO,KAAKC,UAAU,eAC5B,kBAACF,EAAA,EAAOG,MAAR,CAAcD,UAAU,eAAeE,KAAK,KAA5C,eACA,kBAACJ,EAAA,EAAOK,OAAR,CAAeC,gBAAc,qBAC7B,kBAACN,EAAA,EAAOO,SAAR,CAAiBC,GAAG,yBAClB,kBAACC,EAAA,EAAD,KACE,kBAACA,EAAA,EAAIC,KAAL,CAAUR,UAAU,eAAeE,KAAK,UACtC,kBAACZ,EAAD,CAAaG,SAAUE,EAAc,WAArC,UAEF,kBAACY,EAAA,EAAIC,KAAL,CAAUR,UAAU,eAAeE,KAAK,aACtC,kBAACZ,EAAD,CAAaG,SAAUE,EAAc,cAArC,aAEF,kBAACY,EAAA,EAAIC,KAAL,CAAUR,UAAU,eAAeE,KAAK,YACtC,kBAACZ,EAAD,CAAaG,SAAUE,EAAc,aAArC,aAGJ,kBAACY,EAAA,EAAD,CAAKP,UAAY,WACf,kBAACS,EAAA,EAAD,CAAaC,MAAM,YAAYJ,GAAG,2BAChC,kBAACG,EAAA,EAAYE,KAAb,CAAkBT,KAAK,eAAvB,aACA,kBAACO,EAAA,EAAYE,KAAb,CAAkBT,KAAK,eAAvB,aACA,kBAACO,EAAA,EAAYE,KAAb,CAAkBT,KAAK,eAAvB,mB,4NC3Cd,IAAMvB,EAAcF,IAAOG,IAAV,KAMX4B,EAAO/B,IAAOmC,EAAV,KAaKC,EATE,WACf,OACE,kBAAC,EAAD,KACE,kBAACL,EAAD,CAAMN,KAAK,oDAAX,uBACA,kBAACM,EAAD,CAAMN,KAAK,oDAAX,yB,uqBCPN,IAAMpB,EAAYL,IAAOG,IAAV,KAOTkC,EAAarC,IAAOC,IAAV,KAMVC,EAAcF,IAAOG,IAAV,KAQXmC,EAAyBtC,IAAOG,IAAV,KAyC5B,SAASoC,IAEP,IAAMC,EAAe,CACnB,QACA,WACA,sBALgB,EASQC,IAAMC,SAAS,GATvB,mBASXC,EATW,KASJC,EATI,KAyBlB,OAbAH,IAAMI,WAAU,WACd,IAAMC,EAAaC,aAAY,kBAC7BH,GAAS,SAAAD,GAAK,OAAIA,EAAQ,OAC1B,KAEF,OAAO,kBAAMK,cAAcF,OAG1BH,EAAS,GACVC,GAAS,SAAAD,GAAK,OAAI,KAIb,kBAAC,IAAD,CACCM,KAAOT,EAAaG,EAAQH,EAAaU,QACzCC,OAAUC,UAAQC,OAClBC,UAAQ,EACRC,QAAM,IAjChBC,QAAQC,IAAI,gBA0CZ,IAmCeC,EAnCE,WACf,IAAMC,EAAWC,cACXC,EAzER,WACE,IAAMC,EAA6B,kBAAXC,OAExB,SAASC,IACP,MAAO,CACLC,MAAOH,EAAWC,OAAOG,gBAAaC,EACtCC,OAAQN,EAAWC,OAAOM,iBAAcF,GANvB,MAUezB,mBAASsB,GAVxB,mBAUdH,EAVc,KAUFS,EAVE,KAyBrB,OAbAzB,qBAAU,WACR,IAAKiB,EACH,OAAO,EAGT,SAASS,IACPD,EAAcN,KAIhB,OADAD,OAAOS,iBAAiB,SAAUD,GAC3B,kBAAMR,OAAOU,oBAAoB,SAAUF,OAG7CV,EAgDYa,GAEnB,MAAwB,KAArBf,EAASgB,SACNd,EAAWI,OAAOJ,EAAWO,OAAO,IAAQ,KAAK,KAEjD,6BACE,kBAAC,EAAD,CAAWjD,YAAawC,EAASgB,WACjC,kBAACtC,EAAD,CAAY5B,IAAKC,EAAQ,KAA6BC,IAAI,SAC1D,kBAAC,EAAD,KACI,kBAAC2B,EAAD,oBACc,kBAACC,EAAD,SAOpB,6BACE,kBAAC,EAAD,CAAWpB,YAAawC,EAASgB,WACjC,kBAACtC,EAAD,CAAY5B,IAAKC,EAAQ,KAA4BC,IAAI,SACzD,kBAAC,EAAD,KACI,kBAAC,EAAD,oBACc,kBAAC4B,EAAD,SAOjB,kBAAC,EAAD,CAAWpB,YAAawC,EAASgB,Y,k0BCxI5C,IAAMC,EAAU5E,IAAOG,IAAV,KAOP0E,EAAS7E,IAAO8E,GAAV,KAINC,GAAQ/E,IAAOgF,MAAMC,OAAM,SAAAlE,GAAK,MAAK,CAIzCmE,KAAMnE,EAAMmE,MAAQ,SAJRlF,CAAH,KAmBLmF,GAAkBnF,IAAOoF,SAAV,KAWrBC,IAASC,SAAS,IAClBD,IAASE,aAAa,IAEtB,IAqCeC,GArCC,WAAO,IAAD,EACaC,cAA1BC,EADa,EACbA,SAAUC,EADG,EACHA,aAoBjB,OACE,kBAACf,EAAD,KACE,0BAAMgB,SAAUD,GApBH,SAAAE,GACf,IAAIC,EAAU,CAAC,KAAYD,EAAKE,KACjB,MAAYF,EAAKG,MACjB,QAAYH,EAAKI,SAIhCC,IAAMC,KAAK,mCAAmC,CAC5CN,KAAM,CACJO,KAAUP,EAAKE,KACfM,MAAUR,EAAKG,MACfF,QAAUD,EAAKI,WAGnBzC,QAAQC,IAAIqC,OAOR,kBAACjB,EAAD,2BACA,kBAACE,GAAD,CAAOuB,IAAKZ,EAAUU,KAAK,OAAOG,YAAY,OAAOC,KAAK,SAC1D,6BACA,kBAACzB,GAAD,CAAOuB,IAAKZ,EAAUU,KAAK,QAASG,YAAY,QAAQC,KAAK,UAC7D,6BACA,kBAACrB,GAAD,CAAiBmB,IAAKZ,EAAUU,KAAK,UAAUG,YAAY,UAAUC,KAAK,UAAUC,KAAK,MACzF,6BACA,kBAAC1B,GAAD,CAAOyB,KAAK,c,SC5DLE,GAbH,WACV,OACE,6BACE,kBAAC,KAAD,KACE,kBAAC,IAAD,CAAOC,KAAO,GAAGC,OAAU,kBAAM,kBAAC,EAAD,SACjC,kBAAC,IAAD,CAAOD,KAAO,SAASC,OAAU,kBAAM,kBAAC,EAAD,SACvC,kBAAC,IAAD,CAAOD,KAAO,YAAYC,OAAU,kBAAM,kBAAC,EAAD,SAC1C,kBAAC,IAAD,CAAOD,KAAO,WAAWC,OAAU,kBAAM,kBAAC,GAAD,YCJ7BC,QACW,cAA7B9C,OAAOJ,SAASmD,UAEe,UAA7B/C,OAAOJ,SAASmD,UAEhB/C,OAAOJ,SAASmD,SAASC,MACvB,2DCVNC,IAASJ,OAAO,kBAAC,GAAD,MAASK,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB,kGErInB3H,EAAOC,QAAU,IAA0B,sC","file":"static/js/main.662f3dff.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/HSPTG1LowRes.e7a91386.jpg\";","module.exports = __webpack_public_path__ + \"static/media/HSPTGLowRes.ed4eeb74.jpg\";","import React from \"react\"\r\nimport styled from 'styled-components'\r\nimport { Container, Row, Col } from \"react-bootstrap\"\r\n\r\n\r\nconst ImageWrapper = styled.img`\r\n  position: relative;\r\n  height: 30em;\r\n  top: 4em;\r\n`\r\n\r\nconst TextWrapper = styled.div`\r\n  position: relative;\r\n  box-shadow: 10px 5px 12px black;\r\n  top: 4em;\r\n  bottom: 15em; \r\n`\r\n\r\nconst About = () => {\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <Row lg={8}>\r\n        <Col lg={8}>\r\n          <ImageWrapper src={require(\"../Data/MyFace1.png\")} alt=\"duck\"/>\r\n        </Col>\r\n        <Col>\r\n          <TextWrapper>\r\n            <h1>About Me</h1>\r\n            I am a passionate programmer who is always searching to learn new things.\r\n            Bear with the mess around here; the website is currently being built.\r\n          </TextWrapper>\r\n        </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default About\r\n\r\n","import React from \"react\"\r\nimport { Navbar, Nav, NavDropdown} from 'react-bootstrap'\r\nimport styled from 'styled-components'\r\n\r\nconst NavBarWrap = styled.div`\r\n  Background-color:linear-gradient(#fff, #000);\r\n  border-bottom: 1px solid #000000;\r\n  box-shadow: 0 4px 4px #000000;\r\n`\r\n\r\n// if props.isActive is true it returns green\r\nconst NavLinkText = styled.span`\r\n  color: ${props => props.isActive && 'red'};\r\n`\r\n\r\n// isActive :: String -> String -> Boolean\r\n// isActive is a function that takes a string returns a function\r\n// that takes a string that returns a boolean\r\nconst isActive = (activeRoute) => (route) => \r\n  activeRoute === route\r\n\r\n\r\nconst AppNavBar = (props) => {\r\n  // Object decompisition \r\n  const { activeRoute } = props\r\n  const isActiveRoute = isActive(activeRoute)\r\n\r\n  return (\r\n    <NavBarWrap>\r\n      <Navbar expand=\"sm\" className=\"navbar-dark\">\r\n        <Navbar.Brand className=\"app-nav-link\" href=\"/\">Liam Newton</Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n          <Nav>\r\n            <Nav.Link className=\"app-nav-link\" href=\"/about\">\r\n              <NavLinkText isActive={isActiveRoute(\"/about\")}>About</NavLinkText>\r\n            </Nav.Link>\r\n            <Nav.Link className=\"app-nav-link\" href=\"/projects\">\r\n              <NavLinkText isActive={isActiveRoute(\"/projects\")}>Projects</NavLinkText>\r\n            </Nav.Link>\r\n            <Nav.Link className=\"app-nav-link\" href=\"/contact\">\r\n              <NavLinkText isActive={isActiveRoute(\"/contact\")}>Contact</NavLinkText>\r\n            </Nav.Link>\r\n          </Nav>\r\n          <Nav className = \"mr-auto\">\r\n            <NavDropdown title=\"For Later\" id=\"collasible-nav-dropdown\">\r\n              <NavDropdown.Item href=\"/action/3.1\">Something</NavDropdown.Item>\r\n              <NavDropdown.Item href=\"/action/3.2\">Something</NavDropdown.Item>\r\n              <NavDropdown.Item href=\"/action/3.3\">Something</NavDropdown.Item>\r\n            </NavDropdown>\r\n          </Nav>\r\n          </Navbar.Collapse>\r\n      </Navbar>\r\n    </NavBarWrap>\r\n  )\r\n}\r\n\r\nexport default AppNavBar","import React from \"react\"\r\nimport { useLocation } from \"react-router-dom\"\r\nimport AppNavBar from \"../Components/AppNavBar\"\r\nimport styled from 'styled-components'\r\n\r\nconst TextWrapper = styled.div`\r\n  text-align: center;\r\n  margin: auto;\r\n  max-width: 800px;\r\n`\r\n\r\nconst Link = styled.a`\r\n  color: black;\r\n`\r\n\r\nconst Projects = () => {\r\n  return (\r\n    <TextWrapper>\r\n      <Link href=\"https://github.com/CodesReallyWell/CryptoProject\">Data Mining Project</Link>\r\n      <Link href=\"https://github.com/CodesReallyWell/ResumeWebsite\">Website Source Code</Link>\r\n    </TextWrapper>\r\n  )\r\n}\r\n\r\nexport default Projects\r\n","import React from \"react\"\r\nimport { useLocation } from \"react-router-dom\"\r\nimport AppNavBar from \"../Components/AppNavBar\"\r\nimport styled from 'styled-components'\r\n\r\n// For getting current heigh/width of browser windows\r\nimport { useState, useEffect } from 'react';\r\n\r\n// For fancy main page text\r\nimport TextTransition, { presets } from \"react-text-transition\";\r\n\r\n\r\nconst Container = styled.div`\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  display: flex;\r\n`\r\n\r\nconst ImgWrapper = styled.img`\r\n  position: static;\r\n  width: 100%;\r\n  overflow: hidden;\r\n`\r\n\r\nconst TextWrapper = styled.div`\r\n  position: absolute;\r\n  top: 40vh;\r\n  font-weight: bold;\r\n  font-size: 400%;\r\n  letter-spacing: 15px;\r\n`\r\n\r\nconst SmallScreenTextWrapper = styled.div`\r\n  position: absolute;\r\n  top: 40vh;\r\n  font-weight: bold;\r\n  font-size: 200%;\r\n  letter-spacing: 15px;\r\n`\r\n\r\nfunction ScreenHeight(){\r\n  const isClient = typeof window === 'object';\r\n\r\n  function getSize() {\r\n    return {\r\n      width: isClient ? window.innerWidth : undefined,\r\n      height: isClient ? window.innerHeight : undefined\r\n    };\r\n  }\r\n\r\n  const [windowSize, setWindowSize] = useState(getSize);\r\n\r\n  useEffect(()=>{\r\n    if (!isClient) {\r\n      return false;\r\n    }\r\n  \r\n    function handleResize() {\r\n      setWindowSize(getSize());\r\n    }\r\n\r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n\r\n  });\r\n  return windowSize\r\n  \r\n}\r\n\r\nconsole.log(\"Code Changed\")\r\n\r\n\r\n//<ImgWrapper2 src={require(\"../Data/HSPTG.jpg\")} alt=\"duck\"/>\r\nfunction FancyText(){\r\n\r\n  const HEADLINETEXT = [  \r\n    \"Codes\",\r\n    \"Develops\",\r\n    \"Fixes This Website\"\r\n    ]\r\n  \r\n  // JS ew states\r\n  const [index, setIndex] = React.useState(0);\r\n  \r\n  // must clear interval at end of React.useEffect otherwise you get a massive memory leak\r\n  React.useEffect(() => {\r\n    const intervalId = setInterval(() =>\r\n      setIndex(index => index + 1),\r\n      5000 // every 5 seconds\r\n    )\r\n    return () => clearInterval(intervalId);\r\n  })\r\n\r\n  if(index >  2){\r\n    setIndex(index => 0)\r\n  }\r\n\r\n\r\n  return <TextTransition\r\n          text={ HEADLINETEXT[index % HEADLINETEXT.length] }\r\n          spring={  presets.gentle  }\r\n          overflow\r\n          inline\r\n          />\r\n\r\n}\r\n\r\n//Current resolution: {windowSize.height-60}x{windowSize.width}&#10;\r\n//              Aspect Ratio: {windowSize.width/(windowSize.height-60)}\r\n\r\n\r\nconst MainPage = () => {\r\n  const location = useLocation()\r\n  const windowSize = ScreenHeight() \r\n\r\n  if(location.pathname == \"/\"){\r\n    if((windowSize.width/(windowSize.height-60)) < (6637/3787)){\r\n      return (\r\n        <div>\r\n          <AppNavBar activeRoute={location.pathname}/>\r\n          <ImgWrapper src={require(\"../Data/HSPTG1LowRes.jpg\")} alt=\"duck\"/>\r\n          <Container>\r\n              <SmallScreenTextWrapper>\r\n                Liam Newton <FancyText/>\r\n              </SmallScreenTextWrapper>\r\n          </Container>\r\n        </div>\r\n        );\r\n    }else{\r\n      return (\r\n        <div>\r\n          <AppNavBar activeRoute={location.pathname}/>\r\n          <ImgWrapper src={require(\"../Data/HSPTGLowRes.jpg\")} alt=\"duck\"/>\r\n          <Container>\r\n              <TextWrapper>\r\n                Liam Newton <FancyText/>\r\n              </TextWrapper>\r\n          </Container>\r\n        </div>\r\n        );\r\n    }\r\n  }else{\r\n    return(<AppNavBar activeRoute={location.pathname}/>)\r\n  }\r\n}\r\n\r\nexport default MainPage\r\n","import React from \"react\"\r\nimport styled from 'styled-components'\r\nimport { useForm } from \"react-hook-form\"\r\nimport Telegram from 'telegram-send-message'\r\nimport axios from 'axios'\r\n\r\n// CSS Stuff\r\nconst Contain = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  text-align: center;\r\n`\r\n\r\nconst H1Wrap = styled.h1`\r\n  font-size: 3em;\r\n  font-weight: 300;\r\n`\r\nconst Input = styled.input.attrs(props => ({\r\n  // we can define static props\r\n\r\n  // or we can define dynamic ones\r\n  size: props.size || \"1em\",\r\n}))`\r\n  color: white;\r\n  font-size: 1em;\r\n  background: transparent;\r\n  border: none;\r\n  border-radius: 0;\r\n  border-bottom: 1px solid #736f73;\r\n\r\n\r\n  /* here we use the dynamically computed prop */\r\n  margin: 1em;\r\n  padding: 1em;\r\n`;\r\n\r\nconst TextAreaWrapper = styled.textarea`\r\n  color: white;\r\n  font-size: 1em;\r\n  background: transparent;\r\n  border: none;\r\n  border-radius: 0;\r\n  border-bottom: 1px solid #736f73;\r\n\r\n  margin: 1em;\r\n`\r\n\r\nTelegram.setToken(\"\")\r\nTelegram.setRecipient('')\r\n\r\nconst Contact = () => {\r\n  const {register, handleSubmit} = useForm()\r\n  \r\n  const onSubmit = data => {\r\n    var message = {'name'    : data.Name,\r\n                   'email'   : data.Email,\r\n                   'message' : data.Message}\r\n\r\n    // make post request with axios\r\n    // request path is /contact\r\n    axios.post('http://82.15.156.40:4000/contact',{\r\n      data: {\r\n        name    : data.Name,\r\n        email   : data.Email,\r\n        message : data.Message\r\n      }\r\n    });\r\n    console.log(message)\r\n\r\n  }\r\n\r\n  return (\r\n    <Contain>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <H1Wrap>Under Construction</H1Wrap>\r\n        <Input ref={register} name=\"Name\" placeholder=\"Name\" type=\"text\"/>\r\n        <br/>\r\n        <Input ref={register} name=\"Email\"  placeholder=\"Email\" type=\"Email\"/>\r\n        <br/>\r\n        <TextAreaWrapper ref={register} name=\"Message\" placeholder=\"Message\" type=\"Message\" rows=\"5\"/>\r\n        <br/>\r\n        <Input type=\"Submit\"/>\r\n      </form>\r\n    </Contain>\r\n  )\r\n}\r\n\r\nexport default Contact\r\n","import React from 'react'\r\nimport './App.css'\r\nimport About from './Pages/About'\r\nimport Projects from './Pages/Projects'\r\nimport MainPage from './Pages/MainPage'\r\nimport Contact from './Pages/Contact'\r\nimport { BrowserRouter, Route } from 'react-router-dom'\r\n\r\n\r\nconst App = () => {\r\n  return (\r\n    <div>\r\n      <BrowserRouter>\r\n        <Route path = \"\" render = {() => <MainPage></MainPage>}/>\r\n        <Route path = \"/about\" render = {() => <About></About>}/>\r\n        <Route path = \"/projects\" render = {() => <Projects></Projects>}/>\r\n        <Route path = \"/contact\" render = {() => <Contact></Contact>}/>\r\n      </BrowserRouter>\r\n    </div>\r\n\r\n  )\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/MyFace1.d6c254b0.png\";"],"sourceRoot":""}